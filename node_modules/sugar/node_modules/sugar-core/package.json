{
  "_args": [
    [
      {
        "raw": "sugar-core@^2.0.0",
        "scope": null,
        "escapedName": "sugar-core",
        "name": "sugar-core",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\mownamasse\\Documents\\node-v6.10.3\\node_modules\\sugar"
    ]
  ],
  "_from": "sugar-core@>=2.0.0 <3.0.0",
  "_id": "sugar-core@2.0.4",
  "_inCache": true,
  "_location": "/sugar/sugar-core",
  "_nodeVersion": "5.4.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/sugar-core-2.0.4.tgz_1479919159694_0.6986725823953748"
  },
  "_npmUser": {
    "name": "l_andrew_l",
    "email": "plummer.andrew@gmail.com"
  },
  "_npmVersion": "3.3.12",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sugar-core@^2.0.0",
    "scope": null,
    "escapedName": "sugar-core",
    "name": "sugar-core",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/sugar"
  ],
  "_resolved": "https://registry.npmjs.org/sugar-core/-/sugar-core-2.0.4.tgz",
  "_shasum": "9db0730e6c47eb7d28184a79c4ab18b2b7946ca0",
  "_shrinkwrap": null,
  "_spec": "sugar-core@^2.0.0",
  "_where": "C:\\Users\\mownamasse\\Documents\\node-v6.10.3\\node_modules\\sugar",
  "author": {
    "name": "Andrew Plummer",
    "email": "plummer.andrew@gmail.com"
  },
  "browser": {
    "buffer": false
  },
  "bugs": {
    "url": "https://github.com/andrewplummer/Sugar/issues"
  },
  "dependencies": {},
  "description": "Core module for the Sugar Javascript utility library.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "9db0730e6c47eb7d28184a79c4ab18b2b7946ca0",
    "tarball": "https://registry.npmjs.org/sugar-core/-/sugar-core-2.0.4.tgz"
  },
  "engines": {
    "node": ">= 0.8.23"
  },
  "gitHead": "4040d34e7a338145ff0173beb598febe954edcbe",
  "homepage": "https://sugarjs.com/",
  "icon": "https://sugarjs.com/icon.svg",
  "keywords": [
    "sugar",
    "sugarjs",
    "functional",
    "browser",
    "utility",
    "util"
  ],
  "license": "MIT",
  "main": "sugar-core.js",
  "maintainers": [
    {
      "name": "l_andrew_l",
      "email": "plummer.andrew@gmail.com"
    }
  ],
  "name": "sugar-core",
  "optionalDependencies": {},
  "readme": "# sugar-core\n\nThis is the core package of the [Sugar](https://github.com/andrewplummer/Sugar)\nlibrary. It provides basic behavior as well as the ability to define new methods.\nAll Sugar npm packages depend on this package. Plugin developers can also depend\non it to define new methods for Sugar plugins.\n\n## Documentation\n\n#### [https://sugarjs.com/docs/](https://sugarjs.com/docs/)\n\nNote: All define methods are called on the global (or exported object in npm),\nand accept either a name and a function as two arguments or a single object\nmapping names to functions.\n\n\n## defineStatic\n\nDefines a method to be called on the Sugar global or on a native global in\nextended mode.\n\n\n## defineInstance\n\nDefines a method to be called on the Sugar global or as an instance method on\nchainables or native objects in extended mode. All methods should accept the\ninstance object as their first argument, and should never refer to `this`.\n\n\n## defineInstanceAndStatic\n\nDefines a method to be called both as an instance and static method. This method\nis required for Object methods, which must be defined as both static (as Sugar\nwill not extend `Object.prototype`) and instance (for chainables). Use this for\nany methods intended as Object instance methods.\n\n\n## defineStaticWithArguments\n\nThis method is identical to `defineStatic` except that when methods are called,\nthey will collect any arguments past `n - 1`, where `n` is the number of\narguments that the method accepts. Collected arguments will be passed to the\nmethod as the last argument defined.\n\n\n## defineInstanceWithArguments\n\nThis method is identical to `defineInstance` except that when methods are\ncalled, they will collect any arguments past `n - 1`, where `n` is the number of\narguments that the method accepts. Collected arguments will be passed to the\nmethod as the last argument defined.\n\n\n## defineStaticPolyfill\n\nDefines a static method that is mapped onto a native if it does not already\nexist. Intended only for creating polyfills that follow the ECMAScript spec.\n\n\n## defineInstancePolyfill\n\nDefines an instance method that is mapped onto a native prototype if it does not\nalready exist. Intended only for creating polyfills that follow the ECMAScript\nspec. Note that this method differs from `defineInstance` as there is no static\nsignature (as the method is mapped as-is to the native), so it should refer to\nits `this` object.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andrewplummer/Sugar.git"
  },
  "scripts": {},
  "typings": "sugar.d.ts",
  "version": "2.0.4"
}

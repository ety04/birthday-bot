
const request = require('superagent')
var cheerio = require('cheerio')


const url = 'http://www.fmylife.com/index.php/random';


/**
 * -----> aJoke
 * Makes an HTTP request to retrieve a joke from a website
 * @param {void}
 * @resolve {String} 	: a very good one
 */
function aJoke()
{
	try{
		return new Promise( (resolve, reject) => {
			request.get(url, (res, err) => {
				if(err)
				{
					console.log("ERROR REQUESTING: " + err.text);
					reject(err);
				}
				var source = cheerio.load(res.text);
				var list_of_jokes = new Array();
				source('div.panel-content').each( function()								// div : level 1
				{
					source(this).children('p.hidden-xs').each ( function()						// p : level 2
					{
						var the_joke = source(this).children('a').first().text(); // a : level 3, where the joke is
						//console.log(the_joke);
						if(!the_joke.endsWith("FML"))		// incomplete
						{
							console.log("three little poiiiiiiiiiiiiiiints!!! ");
							var letsgo = "http://www.fmylife.com" + source(this).children('a').first().attr('href');
							console.log("url of the joooke: " + letsgo);
							
							try{
								var inner_joke = "";
								var inner_call = new Promise( (resolve2, reject2) =>
								{
									request.get(letsgo, (res2, err2) => {
										if(err2)
										{
											console.log("ERROR REQUESTING: " + err2.text);
											reject2(err2);
										}
										var inner_source = cheerio.load(res2.text);
										 resolve2(inner_source('div.panel-content').children('p').first().text());
										//console.log(inner_source('div.panel-content').children('p').first().html());
										//console.log(inner_joke);
									});
								});
							}catch(err3)
							{
								console.log("ERROR SCRAPING the inner source file: " + err3);
							}
						}
						//else
							//list_of_jokes.push(the_joke);
					
					});	
					if(!the_joke.endsWith("FML"))		// incomplete
						{
							inner_call.then( (my_joke) => { list_of_jokes.push(my_joke);  console.log("pushing the joke") })
								.catch( (err4) =>	{
								console.log("ERROR PROMISING: " + err4);
							})
						}
				});
				var num = list_of_jokes.length;
				console.log("number of joookes: " + num);
				let zhar = Math.floor( Math.random() * num);
				console.log("number of the joooke: " + zhar);
				let selected_joke = list_of_jokes[zhar];
				console.log("joooke: " + selected_joke);
				resolve(selected_joke);
				//resolve(source('div.panel-content').children('p').first().children('a').first().text());
				reject("error retrieving the joke");
			});
		});
	}
	catch(err)
	{
		console.log("ERROR SCRAPING: " + err);
		return err;
	}
}

/**
 * -----> retrieveJoke
 * The asynchronous call to aJoke to grab the joke's text
 * @param {void}
 * @return text_content {String}	 : a very good one
 */
async function retrieveJoke()
{
	var text_content = await aJoke();
	if(text_content === null)
		console.log("The text received is null");
	else
		console.log("The text received is NOT null");
	return text_content;
}

exports = module.exports = retrieveJoke;